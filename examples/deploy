#!/usr/bin/env node

/**
 * Module dependencies.
 */

import program from '../lib';

program
    .option('-C, --chdir <path>', 'change the working directory')
    .option('-c, --config <path>', 'set config path. defaults to ./deploy.conf')
    .option('-T, --no-tests', 'ignore test hook');

program
    .command('setup [<env>...]')
    .description('run setup commands for all envs')
    .option("-s, --setup_mode [mode]", "Which setup mode to use")
    .action((args, options) => {
        const mode = options.setup_mode || "normal";
        const env = args.env.join(',') || 'all';
        console.log('setup for %s env(s) with %s mode', env, mode);
    });

program
    .command('exec <cmd>')
    .description('execute the given remote cmd')
    .option("-e, --exec_mode <mode>", "Which exec mode to use")
    .action((args, options) => {
        console.log('exec "%s" using %s mode', args.cmd, options.exec_mode);
    }).on('help', () => {
        console.log('  Examples:');
        console.log();
        console.log('    $ deploy exec sequential');
        console.log('    $ deploy exec async');
        console.log();
    });

program
    .command('*')
    .action((args) => {
        console.log('deploying "%s"', args.etc[0]);
    });

program.parse(process.argv);
